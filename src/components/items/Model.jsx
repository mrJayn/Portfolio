/* eslint-disable react/no-unknown-property */
// Auto-generated by: https://github.com/pmndrs/gltfjsx
import { motion } from 'framer-motion-3d'
import { Html, useGLTF } from '@react-three/drei'
import { getFormattedDate } from '@utils'

export default function Model({controls,...props}) {
    const { nodes } = useGLTF('/models/iphoneMockUp.gltf')
    
    return (
        <motion.group
            position={[0, -1.8, 0]}
            animate={controls}
            dispose={null}
            {...props}
        >
            <group position={[0, 1.8, 0]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_9.geometry}
                    material={nodes.mesh_9.material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_9_1.geometry}
                    material={nodes.mesh_9_1.material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_9_2.geometry}
                    material={nodes.mesh_9_2.material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_9_3.geometry}
                    material={nodes.mesh_9_3.material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_9_4.geometry}
                    material={nodes.mesh_9_4.material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.AccentsBottom.geometry}
                    material={nodes.AccentsBottom.material}
                    position={[0, -2.68, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.AccentsTop.geometry}
                    material={nodes.AccentsTop.material}
                    position={[0, 0.02, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.FrontCamera.geometry}
                    material={nodes.FrontCamera.material}
                    position={[0.34, 1.32, 0.08]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.FrontSpeaker.geometry}
                    material={nodes.FrontSpeaker.material}
                    position={[0.16, 1.32, 0.08]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.MuteSwitch.geometry}
                    material={nodes.MuteSwitch.material}
                    position={[-0.65, 0.92, 0.01]}
                />
                <group position={[0.97, 0.56, 0]}>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.mesh_5.geometry}
                        material={nodes.mesh_5.material}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.mesh_5_1.geometry}
                        material={nodes.mesh_5_1.material}
                    />
                </group>
                <group position={[0.98, -0.04, 0]}>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.mesh_6.geometry}
                        material={nodes.mesh_6.material}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.mesh_6_1.geometry}
                        material={nodes.mesh_6_1.material}
                    />
                </group>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Screen.geometry}
                    material={nodes.Screen.material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.VolumeButtons.geometry}
                    material={nodes.VolumeButtons.material}
                    position={[-0.66, 0.21, 0]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.HtmlContainer.geometry}
                    material={nodes.HtmlContainer.material}
                    position={[0.17, 0, 0.1]}
                    scale={[1, 1, 1]}
                >
                    <Html
                        center
                        as="div"
                        className="relative h-[65vh] w-[375px]"
                        transform
                        distanceFactor={1.5}
                    >
                        <DeviceDisplay />
                    </Html>
                </mesh>
            </group>
        </motion.group>
    )
}

const DeviceDisplay = ({}) => {
    const d = new Date()
    const currentDate = getFormattedDate(d)
    const currentTime = d.toTimeString().split(' ')[0].slice(0, -3)

    return (
        <div className="absolute inset-2 grid grid-cols-1 grid-rows-[35%_65%] overflow-hidden">
            <div className="full flex-col-center text-center font-montserrat leading-[0.9] text-white">
                <div className="text-[2.85vh]">{currentDate}</div>
                <div className="text-[10vh]">{currentTime}</div>
            </div>
            <div
                id="notification"
                className="flex-col-left relative m-auto mt-0 h-[4em] w-[90%] rounded-xl bg-grey p-[0.15em] pl-[3.25em] text-[18em] text-white after:flex-center after:absolute after:left-[0.5em] after:aspect-[1/1] after:h-[1.5em] after:rounded-full after:bg-grey-40 after:text-[1.35em] after:content-['âœ‰']"
            >
                <span className="ml-auto w-full text-[0.75em] font-medium">{`New Mesaage`}</span>
                <span className="ml-auto w-full leading-[1]">{`Hello, my name's...`}</span>
            </div>
        </div>
    )
}

useGLTF.preload('/models/iphoneMockUp.gltf')
